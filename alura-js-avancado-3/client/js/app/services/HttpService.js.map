{"version":3,"sources":["../../app-src/services/HttpService.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCAYLC,G,EAAK;AACL,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAIH,IAAII,UAAJ,KAAmB,CAAvB,EAA0B;AACtB,wCAAIJ,IAAIK,MAAJ,KAAe,GAAnB,EAAwB;AACpBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAFD,MAEO;AACHT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BARD;AASAR,gCAAIS,IAAJ;AAEH,yBAfM,CAAP;AAgBH;;;yCAEIb,G,EAAKc,I,EAAM;AACZ,+BAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,gCAAIW,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAX,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAIH,IAAII,UAAJ,KAAmB,CAAvB,EAA0B;AACtB,wCAAIJ,IAAIK,MAAJ,KAAe,GAAnB,EAAwB;AACpBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAFD,MAEO;AACHT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BARD;AASAR,gCAAIS,IAAJ,CAASH,KAAKM,SAAL,CAAeF,IAAf,CAAT,EAdoC,CAcJ;AACnC,yBAfM,CAAP;AAgBH","file":"HttpService.js","sourcesContent":["export class HttpService {\n    \n   /* \n    * Possíveis estados da requisição:\n    * \n    * 0: requisição não iniciada\n    * 1: conexão com o servidor estabelecida\n    * 2: requisição recebida\n    * 3: processando requisição\n    * 4: requisição concluída e resposta pronta\n    */\n    \n    get(url) {\n        return new Promise((resolve, reject) => {\n            \n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send();\n            \n        });\n    }\n    \n    post(url, dado) {\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        });\n    }\n    \n}\n\n"]}